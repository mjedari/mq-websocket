# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.5'

# Define services
services:

  # App Service
  app1:
    # Configuration for building the docker image for the service
    container_name: websocket_app_1
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    image: repo.abanicon.com:5050/abantheter-microservices/websocket:${BRANCH_NAME}
    ports:
      - "8081:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    environment: # Pass environment variables to the service
      WEBSOCKET_SERVER_ENVIRONMENT: local
      WEBSOCKET_SERVER_HOST: 0.0.0.0
      WEBSOCKET_SERVER_PORT: 8080
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
      ENVIRONMENT: ${ENVIRONMENT}
      DEBUG: "true"
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      WEBSOCKET_KAFKA_GROUP: "websocket-testing-group"

  app2:
    # Configuration for building the docker image for the service
    container_name: websocket_app_2
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    image: repo.abanicon.com:5050/abantheter-microservices/websocket:${BRANCH_NAME}
    ports:
      - "8084:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    environment: # Pass environment variables to the service
      WEBSOCKET_SERVER_ENVIRONMENT: local
      WEBSOCKET_SERVER_HOST: 0.0.0.0
      WEBSOCKET_SERVER_PORT: 8080
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
      ENVIRONMENT: ${ENVIRONMENT}
      DEBUG: "true"
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      WEBSOCKET_KAFKA_GROUP: "websocket-testing-group"

networks:
  default:
    name: main
    external: true
